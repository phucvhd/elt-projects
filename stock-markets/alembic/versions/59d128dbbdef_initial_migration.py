"""Initial migration

Revision ID: 59d128dbbdef
Revises: 
Create Date: 2025-08-21 12:01:41.186944

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '59d128dbbdef'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ticker_info',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=True),
    sa.Column('long_name', sa.String(), nullable=True),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('market_cap', sa.BigInteger(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('exchange', sa.String(), nullable=True),
    sa.Column('long_business_summary', sa.Text(), nullable=True),
    sa.Column('full_time_employees', sa.Integer(), nullable=True),
    sa.Column('raw_json', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('symbol')
    )
    op.create_index(op.f('ix_ticker_info_symbol'), 'ticker_info', ['symbol'], unique=False)
    op.create_table('corporate_action',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['ticker_info.symbol'], ),
    sa.PrimaryKeyConstraint('symbol', 'date')
    )
    op.create_index(op.f('ix_corporate_action_date'), 'corporate_action', ['date'], unique=False)
    op.create_table('dividend',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('dividend', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['ticker_info.symbol'], ),
    sa.PrimaryKeyConstraint('symbol', 'date')
    )
    op.create_index(op.f('ix_dividend_date'), 'dividend', ['date'], unique=False)
    op.create_table('stock_price',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('open', sa.Float(), nullable=True),
    sa.Column('high', sa.Float(), nullable=True),
    sa.Column('low', sa.Float(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('dividends', sa.Float(), nullable=True),
    sa.Column('stock_splits', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['ticker_info.symbol'], ),
    sa.PrimaryKeyConstraint('symbol', 'date')
    )
    op.create_index(op.f('ix_stock_price_date'), 'stock_price', ['date'], unique=False)
    op.create_table('stock_split',
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('split_ratio', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['ticker_info.symbol'], ),
    sa.PrimaryKeyConstraint('symbol', 'date')
    )
    op.create_index(op.f('ix_stock_split_date'), 'stock_split', ['date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_split_date'), table_name='stock_split')
    op.drop_table('stock_split')
    op.drop_index(op.f('ix_stock_price_date'), table_name='stock_price')
    op.drop_table('stock_price')
    op.drop_index(op.f('ix_dividend_date'), table_name='dividend')
    op.drop_table('dividend')
    op.drop_index(op.f('ix_corporate_action_date'), table_name='corporate_action')
    op.drop_table('corporate_action')
    op.drop_index(op.f('ix_ticker_info_symbol'), table_name='ticker_info')
    op.drop_table('ticker_info')
    # ### end Alembic commands ###
